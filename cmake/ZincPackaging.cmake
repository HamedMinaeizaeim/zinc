
SET(ZINC_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
IF(CMAKE_CL_64)
    SET(ZINC_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR}_64)
ENDIF()

# Preserve the CMAKE_INSTALL_PREFIX for the project and work with absolute install
SET(CPACK_SET_DESTDIR ON)

SET(CPACK_PACKAGE_VERSION_MAJOR "${ZINC_MAJOR_VERSION}")
SET(CPACK_PACKAGE_VERSION_MINOR "${ZINC_MINOR_VERSION}")
SET(CPACK_PACKAGE_VERSION_PATCH "${ZINC_PATCH_VERSION}")

IF( UNIX AND NOT APPLE )
	SET( ZINC_SYSTEM "Linux" )
	SET( CPACK_GENERATOR "TGZ" )

	EXECUTE_PROCESS(COMMAND cat /etc/issue RESULT_VARIABLE COMMAND_RESULT OUTPUT_VARIABLE COMMAND_OUTPUT ERROR_VARIABLE ERR_OUT)
	IF( COMMAND_RESULT EQUAL 0 )
		STRING( REGEX MATCH "^[^\\]*" COMMAND_OUTPUT ${COMMAND_OUTPUT} )
		STRING( STRIP ${COMMAND_OUTPUT} COMMAND_OUTPUT )
		message(STATUS "${COMMAND_OUTPUT}" )
		STRING( REPLACE " " "-" ZINC_SYSTEM ${COMMAND_OUTPUT} )
		STRING( FIND ${ZINC_SYSTEM} "Ubuntu" INDEX )
		IF( INDEX EQUAL 0 )
			SET( CPACK_DEBIAN_PACKAGE_MAINTAINER "Hugh Sorby" ) #required
			SET( CPACK_GENERATOR "DEB" )
		ENDIF()
	ENDIF()
ELSEIF( APPLE )
	LIST( LENGTH LENGTH_ARCHS CMAKE_OSX_ARCHITECTURES )
	message(STATUS "la=${LENGTH_ARCHS}-${CMAKE_OSX_ARCHITECTURES}")
	message(STATUS "la=${CMAKE_SYSTEM_NAME}-${CMAKE_OSX_ARCHITECTURES}")
	SET( ZINC_ARCHITECTURE "universal" )
	EXECUTE_PROCESS(COMMAND sw_vers -productName RESULT_VARIABLE COMMAND_RESULT OUTPUT_VARIABLE PRODUCT_NAME )
	STRING( STRIP ${PRODUCT_NAME} PRODUCT_NAME )
	EXECUTE_PROCESS(COMMAND sw_vers -productVersion RESULT_VARIABLE COMMAND_RESULT OUTPUT_VARIABLE PRODUCT_VERSION )
	STRING( STRIP ${PRODUCT_VERSION} PRODUCT_VERSION )
	STRING( REPLACE " " "-" ZINC_SYSTEM "${PRODUCT_NAME} ${PRODUCT_VERSION}" )
	SET( CPACK_GENERATOR "DragNDrop" )
	SET( CPACK_BUNDLE_NAME "OpenCMISS(Zinc)" )
ELSEIF( WIN32 )
ENDIF()

message(STATUS "'zinc-${ZINC_VERSION}-${ZINC_ARCHITECTURE}-${ZINC_SYSTEM}'" )
SET( CPACK_PACKAGE_FILE_NAME "zinc-${ZINC_VERSION}-${ZINC_ARCHITECTURE}-${ZINC_SYSTEM}" )

INCLUDE(CPack)

